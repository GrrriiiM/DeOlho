// <auto-generated />
using System;
using DeOlho.Services.Politicos.Api.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DeOlho.Services.Politicos.Api.Migrations
{
    [DbContext(typeof(DeOlhoDbContext))]
    partial class DeOlhoDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("DeOlho.Services.Politicos.Api.Domain.ContatoTipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("ContatoTipo");
                });

            modelBuilder.Entity("DeOlho.Services.Politicos.Api.Domain.MandatoSituacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("MandatoSituacao");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Nenhum"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Exercicio"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Afastado"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Convocado"
                        },
                        new
                        {
                            Id = 5,
                            Name = "FimMandato"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Licenca"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Suplencia"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Suspenso"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Vacancia"
                        });
                });

            modelBuilder.Entity("DeOlho.Services.Politicos.Api.Domain.MandatoTipo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("MandatoTipo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Email"
                        },
                        new
                        {
                            Id = 2,
                            Name = "DeputadoFederal"
                        });
                });

            modelBuilder.Entity("DeOlho.Services.Politicos.Api.Domain.Politico", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Apelido");

                    b.Property<string>("CPF");

                    b.Property<int>("EscolaridadeId");

                    b.Property<DateTime?>("Falecimento");

                    b.Property<string>("IntegrationId");

                    b.Property<string>("IntegrationOrigin");

                    b.Property<long>("IntegrationTimestamp");

                    b.Property<DateTime?>("MandatoFim");

                    b.Property<DateTime?>("MandatoInicio");

                    b.Property<int>("MandatoSituacaoId");

                    b.Property<int>("MandatoTipoId");

                    b.Property<DateTime>("Nascimento");

                    b.Property<string>("NascimentoMunicipio");

                    b.Property<string>("NascimentoUF");

                    b.Property<string>("Nome");

                    b.Property<int>("SexoId");

                    b.Property<int>("SituacaoId");

                    b.HasKey("Id");

                    b.ToTable("Politicos");
                });

            modelBuilder.Entity("DeOlho.Services.Politicos.Api.Domain.PoliticoContato", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Contato");

                    b.Property<string>("IntegrationId");

                    b.Property<string>("IntegrationOrigin");

                    b.Property<long>("IntegrationTimestamp");

                    b.Property<long>("PoliticoId");

                    b.Property<int>("TipoId");

                    b.HasKey("Id");

                    b.HasIndex("PoliticoId");

                    b.HasIndex("TipoId");

                    b.ToTable("PoliticoContato");
                });

            modelBuilder.Entity("DeOlho.Services.Politicos.Api.Domain.PoliticoEscolaridade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("PoliticoEscolaridade");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Analfabeto"
                        },
                        new
                        {
                            Id = 2,
                            Name = "LeEscreve"
                        },
                        new
                        {
                            Id = 3,
                            Name = "FundamentalIncompleto"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Fundamental"
                        },
                        new
                        {
                            Id = 5,
                            Name = "MedioIncompleto"
                        },
                        new
                        {
                            Id = 6,
                            Name = "Medio"
                        },
                        new
                        {
                            Id = 7,
                            Name = "TecnicoIncompleto"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Tecnico"
                        },
                        new
                        {
                            Id = 9,
                            Name = "SuperiorIncomplete"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Superior"
                        },
                        new
                        {
                            Id = 11,
                            Name = "PosGraduacaoIncompleto"
                        },
                        new
                        {
                            Id = 12,
                            Name = "PosGraduacao"
                        },
                        new
                        {
                            Id = 13,
                            Name = "MestradoIncompleto"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Mestrado"
                        },
                        new
                        {
                            Id = 15,
                            Name = "DoutoradoIncompleto"
                        },
                        new
                        {
                            Id = 16,
                            Name = "Doutorado"
                        },
                        new
                        {
                            Id = 99,
                            Name = "INCORRETO"
                        });
                });

            modelBuilder.Entity("DeOlho.Services.Politicos.Api.Domain.PoliticoSexo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("PoliticoSexo");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Masculino"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Feminino"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Outro"
                        },
                        new
                        {
                            Id = 99,
                            Name = "INCORRETO"
                        });
                });

            modelBuilder.Entity("DeOlho.Services.Politicos.Api.Domain.PoliticoSituacao", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("PoliticoSituacao");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ativo"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Aposentado"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Preso"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Falecido"
                        },
                        new
                        {
                            Id = 5,
                            Name = "INCORRETO"
                        });
                });

            modelBuilder.Entity("DeOlho.Services.Politicos.Api.Domain.PoliticoContato", b =>
                {
                    b.HasOne("DeOlho.Services.Politicos.Api.Domain.Politico", "Politico")
                        .WithMany("Contatos")
                        .HasForeignKey("PoliticoId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("DeOlho.Services.Politicos.Api.Domain.ContatoTipo", "Tipo")
                        .WithMany()
                        .HasForeignKey("TipoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
